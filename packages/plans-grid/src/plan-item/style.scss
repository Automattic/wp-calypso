@import '~@wordpress/base-styles/breakpoints';
@import '~@automattic/onboarding/styles/mixins';
@import '~@automattic/typography/styles/variables';
@import '../variables.scss';

$plan-item-border-radius: 5px;
$plan-item-border-color: var( --studio-gray-5 );

.plan-item {
	display: inline-flex;
	flex-grow: 1;
	flex-basis: 0;
	flex-direction: column;
}

.plan-item__viewport {
	width: 100%;
	height: 100%;
	padding: 20px;
	border: 1px solid $plan-item-border-color;

	.plan-item + .plan-item & {
		border-top: 0;
	}

	@include break-small {
		padding: 32px;
	}

	.plan-item:first-of-type & {
		border-top-left-radius: $plan-item-border-radius;
		border-top-right-radius: $plan-item-border-radius;
	}

	.plan-item:last-of-type & {
		border-bottom-left-radius: $plan-item-border-radius;
		border-bottom-right-radius: $plan-item-border-radius;
	}

	// Badge will handle border-top in mobile.
	.plan-item.has-badge & {
		border-top-width: 0;
		border-top-left-radius: 0;
		border-top-right-radius: 0;
		border-bottom-left-radius: $plan-item-border-radius;
		border-bottom-right-radius: $plan-item-border-radius;

		@include break-small {
			border-top-width: 1px;
		}
	}

	.plan-item:not( .is-open ) & {
		// Because .plan-item__header acts as a button
		// to expand plan item, padding is applied there.
		padding: 0;
	}
}

.plan-item__name {
	display: inline-block;
	font-size: $font-body;
	line-height: 1.2;

	@include break-small {
		font-size: $font-title-medium;
	}

	.plan-item:not( .is-open ) & {
		font-size: $font-body-small;

		@include break-small {
			font-size: $font-body-small;
		}
	}

	.plan-item.is-primary & {
		font-size: rem( 18px );

		@include break-small {
			font-size: $font-title-medium;
		}
	}
}

.plan-item__description {
	font-size: $font-body-small;
	color: var( --studio-gray-50 );
	margin-top: 4px;
	display: none;

	.plan-item:not( .is-open ) & {
		display: none;
	}

	@include break-small {
		display: block;
	}
}

.plan-item__domain-name {
	font-size: $font-body-small;
}

ul.plan-item__feature-item-group {
	margin: 0;
	column-count: 1;

	@include break-small {
		column-count: 2;
	}

	@include break-large {
		column-count: 3;
	}
}

.plan-item__badge {
	border-top-left-radius: $plan-item-border-radius;
	border-top-right-radius: $plan-item-border-radius;
	margin-bottom: -1px;

	> span {
		display: block;
		height: 24px;
		line-height: 24px;
		padding: 0 14px;
		background: black;
		color: white;
		font-size: $font-body-extra-small;
		font-weight: 600;
		letter-spacing: 0.5px;
		text-align: center;
		text-transform: uppercase;
	}

	@include break-small {
		position: relative;
		top: -12px;
		height: 0;
		overflow: visible;
		text-align: center;
		border-radius: 0;

		> span {
			display: inline-block;
			border-radius: 2px;
		}
	}
}

.plan-item__price-amount {
	display: inline-block;
	font-size: rem( 28px );

	@include break-small {
		font-size: $font-title-large;
	}

	&.is-loading {
		max-width: 60px;
		@include onboarding-placeholder();
	}

	> span {
		display: none;
		font-size: $font-body;
		line-height: 1.2;
		color: var( --studio-gray-40 );
		position: relative;
		top: -1px;
		margin-left: 1px;

		@include break-small {
			display: inline-block;
		}
	}

	.plan-item:not( .is-open ) & {
		font-size: $font-body-small;
		line-height: 1.2;

		> span {
			display: none;
		}
	}
}

.plan-item__header {
	display: block;
	width: 100%;
	cursor: pointer;

	.plan-item:not( .is-open ) & {
		display: flex;
		align-items: baseline;
		padding: 16px 12px;

		@include break-small {
			padding: 16px 24px;
		}
	}

	.plan-item.is-primary & {
		cursor: default;
	}

	@include break-small {
		// Plan name & price side by side.
		display: flex;
	}
}

.plan-item__price {
	margin-top: 12px;

	.plan-item:not( .is-open ) & {
		margin-top: 0;
		margin-left: 8px;
		color: var( --studio-gray-40 );
	}

	@include break-small {
		margin-top: 0;
		margin-left: auto;
	}
}

.plan-item__price-note {
	display: block;
	font-size: $font-body-extra-small;
	line-height: 1.5;
	color: var( --studio-gray-40 );

	@include break-small {
		display: none;
	}

	.plan-item:not( .is-open ) & {
		display: none;
	}
}

.plan-item__actions {
	margin-top: 16px;

	@include break-small {
		margin-top: 24px;
	}
}

.plan-item__select-button.components-button {
	height: 36px;
	padding: 0 18px;
	border-radius: 4px;

	@include break-small {
		height: 40px;
		padding: 0 24px;
	}
}

.plan-item__dropdown-chevron {
	flex: 1;
	text-align: right;
	position: relative;
	top: -2px;

	@include break-small {
		right: -8px;
	}
}

.plan-item.is-open .plan-item__dropdown-chevron {
	display: none;
}

.plan-item__domain-summary {
	font-size: $font-body-small;
	line-height: 22px;
	margin-top: 10px;

	// overwrite button styles
	&.components-button.is-link {
		text-decoration: none;
		font-size: $font-body-small;
		color: var( --studio-blue-40 );
		display: flex;
		align-items: flex-start;
	}

	// the tick
	svg:first-child {
		margin-right: 4px;
	}

	svg:first-child path {
		fill: rgb( 74, 161, 80 );

		// to make the tick thicker
		stroke: rgb( 74, 161, 80 );
	}
}

.plan-item__domain-summary.is-picked {
	font-weight: bold;
}

.plan-item__domain-summary.is-cta {
	font-weight: bold;
	padding: 0;

	// overwrite button styles
	&.components-button.is-link {
		color: var( --studio-blue-40 );
	}

	// the tick
	svg:first-child path {
		fill: rgb( 74, 161, 80 );
		stroke: rgb( 74, 161, 80 );
		margin-top: 5px;
	}

	// the chevron
	svg:last-child {
		fill: var( --studio-blue-40 );
		stroke: var( --studio-blue-40 );
		margin-left: 8px;
		margin-top: 8px;
	}
}

.plan-item__domain-summary.components-button.is-link.is-free {
	font-weight: bold;
	color: rgb( 206, 134, 61 );
	text-decoration: line-through;

	// the tick
	svg path {
		fill: rgb( 206, 134, 61 );
		stroke: rgb( 206, 134, 61 );
	}
}

.plan-item__features {
	margin-top: 24px;

	@include break-small {
		margin-top: 36px;
	}
}

.plan-item__feature-item {
	display: block;
	line-height: 24px;
	min-height: 24px;
	font-size: $font-body-small;
	color: $dark-gray-500;

	svg:first-child {
		display: inline-block;
		position: relative;
		top: 3px;
	}

	// the tick
	svg:first-child path {
		fill: rgb( 74, 161, 80 );
		stroke: rgb( 74, 161, 80 );
	}
}
