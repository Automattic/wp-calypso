#!/usr/bin/env node

// This script will return a url of an artifact generated in the latest project build for the specified branch.
// eg: node bin/get-teamcity-artifact-url --token="secret" --artifact="translate/calypso-strings.pot"

const https = require( 'https' );
const SocksProxyAgent = require( 'socks-proxy-agent' );

const parsedArgs = process.argv
	.slice( 2 )
	.filter( ( arg ) => arg.startsWith( '--' ) )
	.reduce( ( accumulator, arg ) => {
		const [ key, value ] = arg.slice( 2 ).split( '=' );
		accumulator[ key ] = value;

		return accumulator;
	}, {} );

const args = {
	token: '',
	branch: 'trunk',
	project: 'calypso_WebApp',
	build: 'calypso_Translate',
	status: 'SUCCESS',
	artifact: '',
	...parsedArgs,
};

const host = 'teamcity.a8c.com';
const baseOptions = {
	host,
	port: 443,
	agent:
		args.socks &&
		new SocksProxyAgent( {
			host: args.socks.split( ':' )[ 0 ],
			port: args.socks.split( ':' )[ 1 ],
		} ),
	headers: {
		Authorization: `Bearer ${ args.token }`,
		Accept: 'application/json',
	},
};

function get( options ) {
	return new Promise( ( resolve, reject ) => {
		https.get( options, ( response ) => {
			let body = '';
			response.on( 'data', ( data ) => {
				body += data;
			} );
			response.on( 'end', () => {
				try {
					return resolve( JSON.parse( body ) );
				} catch ( error ) {
					reject( error );
				}
			} );
			response.on( 'error', reject );
		} );
	} );
}

( async function () {
	try {
		const { build } = await get( {
			...baseOptions,
			path: `/app/rest/builds?locator=project:${ args.project },branch:${ args.branch },buildType:${ args.build },status:${ args.status },count:1`,
		} );
		const path = build[ 0 ].href ?? '';

		console.log( `https://${ host }${ path }/artifacts/content/${ args.artifact }` );
		process.exit( 0 );
	} catch ( error ) {
		console.error( error );
		process.exit( 1 );
	}
} )();
