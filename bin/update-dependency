#!/usr/bin/env node

/**
 * Module dependencies.
 */

var dirs;
var path = require( 'path' );
var fs = require( 'fs' );
var join = path.join;
var read = fs.readFileSync;
var write = fs.writeFileSync;

var dep = process.argv[2];
var version = process.argv[3];

function checkInput() {
	if ( !dep || !version ) {
		console.log( '\x1b[41mupdate-dependency must called with two parameters\x1b[0m ' );
		console.log( '\x1b[41mPlease provide the following parameters:\x1b[0m <dependencyName> <newVersion>' );
		process.exit( 2 ); //eslint-disable-line no-process-exit
	}
}

function updateDepencies() {
	console.log();
	console.log( '  updating %s to %s', dep, version );

	dirs = [
		'server',
		'client'
	];

	dirs.forEach( function( dir ) {
		visitPackageFiles( dir, updatePackage );
	} );

	console.log( '' );
}

function visitPackageFiles( dir, callback ) {
	fs.readdir( dir, function( err, list ) {
		if ( err ) {
			console.log( '\x1b[41mFailure reading directory:\x1b[0m ', err );
		}

		list.forEach( function( file ) {
			file = join( dir, file );

			if ( /package\.json$/.test( file ) ) {
				callback( file );
			}

			fs.stat( file, function( error, stat ) {
				if ( stat && stat.isDirectory() ) {
					visitPackageFiles( file, callback );
				}
			} );
		} );
	} );
}

function updatePackage( packageJsonPath ) {
	var changed = false;
	var conf;
	var json;
	try {
		conf = JSON.parse( read( packageJsonPath, 'utf8' ) );
	} catch ( e ) {
		console.log( '\x1b[41mFailure reading package.json:\x1b[0m ', e );
		return;
	}

	[ 'dependencies', 'devDependencies' ].forEach( function( dependencies ) {
		var curr;
		if ( !conf[dependencies] ) {
			return;
		}
		if ( !conf[dependencies][dep] ) {
			return;
		}
		curr = conf[dependencies][dep];
		console.log( '  updating %j %j %s v%s -> v%s', packageJsonPath, dependencies, dep, curr, version );
		conf[dependencies][dep] = version;
		changed = true;
	} );

	if ( changed ) {
		json = JSON.stringify( conf, null, '\t' );
		write( packageJsonPath, json + '\n' );
	}
}

checkInput();

updateDepencies();
