From 0ea552912d68c8c85d183620ce51a75c85052e8c Mon Sep 17 00:00:00 2001
From: Edwin Takahashi <egao@outlook.com>
Date: Thu, 4 Mar 2021 11:22:46 -0800
Subject: [PATCH] Add playwright and dependencies to package.json and yarn.lock
 files.

Rebase

Install Playwright to node_modules and re-export the environment variable in the test run step. Then try running a demo script

Modify demo test to:
- run in headful mode
- load the login page
- set the default timeout

Refactor the Playwright demo.

Remove the demonstration script from PR.

Add new step in the TeamCity configuration file under `RunCalypsoE2eDesktopTest`.
- modify test file selection command from `ls` to use `find`.
- exclude the `specs-playwright` directory from normal e2e test step.
- add new step after the Selenium based tests to run Playwright demonstration script.

Demonstration migration of the Auth Screen canary test.

Remove accidentally inserted apostrophe.
---
 .teamcity/settings.kts                        | 73 ++++++++++++++++++-
 test/e2e/magellan-playwright.json             | 11 +++
 .../specs-playwright/wp-log-in-out-spec.js    | 33 +++++++++
 3 files changed, 115 insertions(+), 2 deletions(-)
 create mode 100644 test/e2e/magellan-playwright.json
 create mode 100644 test/e2e/specs-playwright/wp-log-in-out-spec.js

diff --git a/.teamcity/settings.kts b/.teamcity/settings.kts
index 21fecf5f36cf..7ef08b63a374 100644
--- a/.teamcity/settings.kts
+++ b/.teamcity/settings.kts
@@ -675,7 +675,6 @@ object RunCalypsoE2eDesktopTests : BuildType({
 				export LIVEBRANCHES=true
 				export NODE_CONFIG_ENV=test
 				export TEST_VIDEO=true
-				export PLAYWRIGHT_BROWSERS_PATH=0
 
 				# Instructs Magellan to not hide the output from individual `mocha` processes. This is required for
 				# mocha-teamcity-reporter to work.
@@ -719,24 +718,94 @@ object RunCalypsoE2eDesktopTests : BuildType({
 				export BROWSERSIZE="desktop"
 				export BROWSERLOCALE="en"
 				export NODE_CONFIG="{\"calypsoBaseURL\":\"${'$'}{URL%/}\"}"
-				export TEST_FILES=${'$'}(join ',' ${'$'}(ls -1 specs*/**/*spec.js))
+				# Find all spec files but exclude playwright tests.
+				export TEST_FILES=${'$'}(join ',' ${'$'}(find specs*/**/*spec.js -type f -not -path specs-playwright/*))
 
 				yarn magellan --config=magellan.json --max_workers=%E2E_WORKERS% --suiteTag=parallel --local_browser=chrome --mocha_args="--reporter mocha-teamcity-reporter" --test=${'$'}{TEST_FILES}
 			""".trimIndent()
 			dockerImage = "%docker_image_e2e%"
 			dockerRunParameters = "-u %env.UID% --security-opt seccomp=.teamcity/docker-seccomp.json --shm-size=8gb"
 		}
+		bashNodeScript {
+						name = "Run e2e tests using Playwright (desktop)"
+			scriptContent = """
+				shopt -s globstar
+				set -x
+
+				cd test/e2e
+				mkdir temp-playwright
+
+				export LIVEBRANCHES=true
+				export NODE_CONFIG_ENV=test
+				export TEST_VIDEO=true
+				export PLAYWRIGHT_BROWSERS_PATH=0
+
+				# Instructs Magellan to not hide the output from individual `mocha` processes. This is required for
+				# mocha-teamcity-reporter to work.
+				export MAGELLANDEBUG=true
+
+				function join() {
+					local IFS=${'$'}1
+					shift
+					echo "${'$'}*"
+				}
+
+				IMAGE_URL="https://calypso.live?image=registry.a8c.com/calypso/app:build-${BuildDockerImage.depParamRefs.buildNumber}";
+				MAX_LOOP=10
+				COUNTER=0
+
+				# Transform an URL like https://calypso.live?image=... into https://<container>.calypso.live
+				while [[ ${'$'}COUNTER -le ${'$'}MAX_LOOP ]]; do
+					COUNTER=${'$'}((COUNTER+1))
+					REDIRECT=${'$'}(curl --output /dev/null --silent --show-error  --write-out "%{http_code} %{redirect_url}" "${'$'}{IMAGE_URL}")
+					read HTTP_STATUS URL <<< "${'$'}{REDIRECT}"
+
+					# 202 means the image is being downloaded, retry in a few seconds
+					if [[ "${'$'}{HTTP_STATUS}" -eq "202" ]]; then
+						sleep 5
+						continue
+					fi
+
+					break
+				done
+
+				if [[ -z "${'$'}URL" ]]; then
+					echo "Can't redirect to ${'$'}{IMAGE_URL}" >&2
+					echo "Curl response: ${'$'}{REDIRECT}" >&2
+					exit 1
+				fi
+
+				# Decrypt config
+				openssl aes-256-cbc -md sha1 -d -in ./config/encrypted.enc -out ./config/local-test.json -k "%CONFIG_E2E_ENCRYPTION_KEY%"
+
+				# Run the test
+				export BROWSERSIZE="desktop"
+				export BROWSERLOCALE="en"
+				export NODE_CONFIG="{\"calypsoBaseURL\":\"${'$'}{URL%/}\"}"
+				export TEST_FILES=${'$'}(join ',' ${'$'}(ls -1 specs-playwright/**/*spec.js))
+
+				xvfb-run yarn magellan --config=magellan-playwright.json --max_workers=%E2E_WORKERS% --suiteTag=parallel --local_browser=chrome --mocha_args="--reporter mocha-teamcity-reporter" --test=${'$'}{TEST_FILES}
+			""".trimIndent()
+			dockerImagePlatform = ScriptBuildStep.ImagePlatform.Linux
+			dockerImage = "%docker_image_e2e%"
+			dockerRunParameters = "-u %env.UID% --security-opt seccomp=.teamcity/docker-seccomp.json --shm-size=8gb"
+		}
 		bashNodeScript {
 			name = "Collect results"
 			executionMode = BuildStep.ExecutionMode.RUN_ON_FAILURE
 			scriptContent = """
 				set -x
 
+				# Collect artifacts of Selenium based tests.
 				mkdir -p screenshots
 				find test/e2e/temp -type f -path '*/screenshots/*' -print0 | xargs -r -0 mv -t screenshots
 
 				mkdir -p logs
 				find test/e2e -name '*.log' -print0 | xargs -r -0 tar cvfz logs.tgz
+
+				# Collect artifacts of Playwright based tests.
+				mkdir -p screenshots-playwright
+				find test/e2e/temp-playwright -type f -path '*/screenshots/*' -print0 | xargs -r -0 mv -t screenshots 
 			""".trimIndent()
 			dockerImage = "%docker_image_e2e%"
 		}
diff --git a/test/e2e/magellan-playwright.json b/test/e2e/magellan-playwright.json
new file mode 100644
index 000000000000..8bfed8a13da7
--- /dev/null
+++ b/test/e2e/magellan-playwright.json
@@ -0,0 +1,11 @@
+{
+	"mocha_tests": [ "specs-playwright" ],
+	"mocha_args": "-R spec-junit-reporter",
+	"max_test_attempts": 3,
+	"max_workers": 1,
+	"sauce": false,
+	"framework": "testarmada-magellan-mocha-plugin",
+	"reporters": [ "./lib/reporter/magellan-reporter.js" ],
+	"executors": [ "testarmada-magellan-local-executor" ],
+	"bail_time": 300000
+}
diff --git a/test/e2e/specs-playwright/wp-log-in-out-spec.js b/test/e2e/specs-playwright/wp-log-in-out-spec.js
new file mode 100644
index 000000000000..2d0a0bf41167
--- /dev/null
+++ b/test/e2e/specs-playwright/wp-log-in-out-spec.js
@@ -0,0 +1,33 @@
+/**
+ * External dependencies
+ */
+
+import playwright from 'playwright';
+
+import LoginPage from '../lib/pages/login-page';
+
+describe( `Auth Screen @canary @parallel`, function () {
+	this.timeout( 30000 );
+	let page;
+	let browser;
+
+	before( 'Start browser', async function () {
+		browser = await playwright.chromium.launch( {
+			args: [ '--disable-dev-shm-usage' ],
+			headless: false,
+		} );
+		const browserContext = await browser.newContext();
+		page = await browserContext.newPage();
+	} );
+
+	describe( 'Loading the log-in screen using Playwright', function () {
+		step( 'Can see the log in screen', async function () {
+			const url = LoginPage.getLoginURL();
+			await page.goto( url, { waitUntill: 'networkidle' } );
+		} );
+	} );
+
+	after( 'close browser', function () {
+		browser.close();
+	} );
+} );
