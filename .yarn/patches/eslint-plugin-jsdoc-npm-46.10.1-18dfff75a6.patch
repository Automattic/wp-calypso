diff --git a/dist/utils/hasReturnValue.js b/dist/utils/hasReturnValue.js
index 79ccfccb8b1462a6733250eab0737b662d10c769..bef5ae9c7e7a9180d9e39736ae615533ce8d45fa 100644
--- a/dist/utils/hasReturnValue.js
+++ b/dist/utils/hasReturnValue.js
@@ -25,7 +25,8 @@ const isNewPromiseExpression = node => {
  */
 const isVoidPromise = node => {
   var _node$typeParameters;
-  return /** @type {import('@typescript-eslint/types').TSESTree.TSTypeReference} */(node === null || node === void 0 || (_node$typeParameters = node.typeParameters) === null || _node$typeParameters === void 0 || (_node$typeParameters = _node$typeParameters.params) === null || _node$typeParameters === void 0 || (_node$typeParameters = _node$typeParameters[0]) === null || _node$typeParameters === void 0 ? void 0 : _node$typeParameters.type) === 'TSVoidKeyword';
+  var typeArguments = node.typeArguments || node.typeParameters;
+  return /** @type {import('@typescript-eslint/types').TSESTree.TSTypeReference} */(node === null || node === void 0 || (_node$typeParameters = typeArguments) === null || _node$typeParameters === void 0 || (_node$typeParameters = _node$typeParameters.params) === null || _node$typeParameters === void 0 || (_node$typeParameters = _node$typeParameters[0]) === null || _node$typeParameters === void 0 ? void 0 : _node$typeParameters.type) === 'TSVoidKeyword';
 };
 const undefinedKeywords = new Set(['TSVoidKeyword', 'TSUndefinedKeyword', 'TSNeverKeyword']);
 
