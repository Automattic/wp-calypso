.jetpack-checklist {
	// The Checklist component does not support the presentational section titles
	// inside the current iteration of the Jetpack checklist. This design iteration
	// is likely to be short lived, so rather than rework the structure of the shared
	// component to support it, the Jetpack checklist receives some special treatment
	// to implement the designs.
	//
	// Normally, a Checklist shows completed tasks before incomplete tasks.
	// This loop ensures that section titles and the completed/incomplete tasks for
	// each section are correctly ordered.
	//
	// `to` determines the upper limit for the 0-indexed position where a section-title
	// may appear as the child of a checklist. Tasks beyond this limit will be
	// handled correctly.
	@for $i from 0 to 30 {
		$base: ( $i * 10 );
		.jetpack-checklist__task-section-title:nth-child( #{$i + 1} ) {
			order: $base;
			~ .checklist__task.is-completed {
				order: ( $base + 1 );
			}
			~ .checklist__task {
				order: ( $base + 2 );
			}
		}
	}

	.jetpack-checklist__task-section-title {
		width: 100%;
		font-weight: 500;
	}
}

.jetpack-checklist__header {
	display: flex;
}

.jetpack-checklist__header-illustration {
	max-width: 128px;
	margin-right: 20px;
}

.jetpack-checklist__header-content {
	flex: 1;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

@include breakpoint( '<660px' ) {
	.jetpack-checklist__header {
		display: block;
	}

	.jetpack-checklist__header-illustration {
		max-width: 80%;
		display: block;
		margin: 20px auto;
		@include breakpoint( '<660px' ) {
			display: none;
		}
	}
}

.jetpack-checklist__footer {
	align-items: center;
	display: flex;
	flex-direction: column;
	text-align: center;
	@include breakpoint( '>660px' ) {
		flex-direction: row;
		justify-content: flex-end;
		text-align: left;
		p {
			flex: 1;
			margin: 0 20px 0 0;
		}
	}
}
