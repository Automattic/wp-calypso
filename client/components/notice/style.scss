.notice {
	display: flex;
	position: relative;
	margin-bottom: 24px;
	border-radius: 1px;
	background: lighten( $gray, 30 );
	box-sizing: border-box;
	font-size: 14px;
	animation: appear .3s ease-in-out;

	@include breakpoint( ">660px" ) {
		font-size: inherit;
	}

	// Success!
	&.is-success {
		background: $alert-green;
	}

	// Warning
	&.is-warning {
		background: $alert-yellow;
	}

	// Error! OHNO!
	&.is-error {
		background: $alert-red;
	}

	// General notice
	&.is-info {
		background: $blue-wordpress;
	}

	&.is-success,
	&.is-error,
	&.is-warning,
	&.is-info {
		color: $white;

		.notice__text a {
			color: $white;
		}

		.notice__dismiss {
			color: $white;
		}
	}
}

.notice__icon {
	flex-shrink: 0;
	padding: 13px 0 13px 16px;
	flex-shrink: 0;

	@include breakpoint( "<660px" ) {
		display: none;
	}
}

.notice__content {
	display: flex;
	flex-grow: 1;

	@include breakpoint( "<480px" ) {
		flex-direction: column;
	}
}

.notice__text {
	font-size: 15px;
	padding: 11px 24px;

	& > span,
	& > div {
		max-width: 680px;
	}

	@include breakpoint( ">660px" ) {
		padding: 13px;
	}

	a {
		text-decoration: underline;
	}

	ul {
		margin-bottom: 0;
		margin-left: 0;
	}

	li {
		margin-left: 2em;
		margin-top: 0.5em;
	}

	p {
		margin-bottom: 0;
		margin-top: 0.5em;

		&:first-child {
			margin-top: 0;
		}
	}
}

.notice__button {
	cursor: pointer;
	margin-left: 0.428em;
}

// "X" for dismissing a notice
.notice__dismiss {
	display: flex;
		flex-shrink: 0;
	padding: 11px 16px;
	cursor: pointer;
	color: $gray;

	@include breakpoint( ">660px" ) {
		padding: 13px 16px;
	}

	&:hover,
	&:focus {
		color: $gray-dark;
	}

	.notice & {
		color: $gray;
		opacity: 0.85;

		&:hover,
		&:focus {
			opacity: 1;
		}
	}
}

// specificity for general `a` elements within notice is too great
a.notice__action {
	display: flex;
		align-items: center;
		flex-shrink: 0;
	box-sizing: border-box;
	cursor: pointer;
	font-size: 15px;
	font-weight: 400;
	margin-left: auto; // forces the element to the right;
	padding: 13px 16px;
	text-decoration: none;
	white-space: nowrap;

	.is-success &,
	.is-error &,
	.is-warning &,
	.is-info & {
		color: $white;
	}

	.is-success & { background: darken( $alert-green, 15 ); }
	.is-error & { background: darken( $alert-red, 15 ); }
	.is-warning & { background: darken( $alert-yellow, 15 ); }
	.is-info & { background: darken( $blue-wordpress, 15 ); }

	.gridicon {
		margin-left: 8px;
		opacity: 0.7;
	}

	&:hover,
	&:focus {
		background: rgba( 255, 255, 255, 0.2 );
	}

	@include breakpoint( "<480px" ) {
		margin: 0;
		justify-content: flex-end;
	}
}

// Compact notices
.notice.is-compact {
	border-radius: 2px;
	display: inline-flex;
	flex-wrap: nowrap;
	min-height: 20px;
	margin: 0;
	padding: 0;
	text-decoration: none;
	text-transform: none;
	vertical-align: middle;

	&.is-success,
	&.is-error,
	&.is-warning,
	&.is-info {
		color: $white;
	}

	.notice__text {
		font-size: 12px;
		padding: 6px 8px;
		line-height: 1;
	}

	.notice__icon {
		align-self: center;
		flex-shrink: 0;
		margin: 0 0 0 8px;
		padding: 0;
		width: 18px;
		height: 18px;
		vertical-align: middle;
	}

	.notice__dismiss {
		display: none;
	}

	a.notice__action {
		background: transparent;
		display: inline-block;
		font-size: 11px;
		font-weight: 600;
		align-self: center;
		margin-left: 16px;
		padding: 0 8px;
		text-decoration: underline;
		text-transform: uppercase;

		&:hover,
		&:active,
		&:focus {
			background: transparent;
			text-decoration: none;
		}

		.gridicon {
			margin-left: 8px;
			width: 14px;
			height: 14px;
			vertical-align: sub;
			opacity: 1;
		}
	}
}
